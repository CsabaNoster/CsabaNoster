---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection, getEntryBySlug, type CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((entry) => ({ params: { slug: entry.slug } }));
}

const slug = Astro.params.slug as string;
const entry = await getEntryBySlug('projects', slug) as CollectionEntry<'projects'> | undefined;
if (!entry) {
  throw new Error(`Project not found: ${slug}`);
}
const { Content } = await entry.render();
let gallery: string[] = [];
if (entry.data.image) {
  gallery.push(entry.data.image);
}
if (entry.slug === 'actuator-38-4-1') {
  gallery = [
    '/uploads/robotics/actuator-38-4-1/Robotic Actuator .png',
    '/uploads/robotics/actuator-38-4-1/Robotic Actuator EBA-17-S - Assembly Drawing Sheet.jpg',
    '/uploads/robotics/actuator-38-4-1/1000007861.jpg',
    '/uploads/robotics/actuator-38-4-1/1000007864.jpg',
    '/uploads/robotics/actuator-38-4-1/rs=w_984,h_820.webp',
  ];
}
if (entry.slug === 'eb15-robotic-arm') {
  gallery = [
    '/uploads/robotics/eb15-robotic-arm/1000007858.jpg',
    '/uploads/robotics/eb15-robotic-arm/1000007859.jpg',
    '/uploads/robotics/eb15-robotic-arm/1000007860.jpg',
    '/uploads/robotics/eb15-robotic-arm/Custom_parts.png',
    '/uploads/robotics/eb15-robotic-arm/EB15_Hero.png',
    '/uploads/robotics/eb15-robotic-arm/Robot Arm EB-15.png',
    '/uploads/robotics/eb15-robotic-arm/Robot Arm EB-15_1.png',
    '/uploads/robotics/eb15-robotic-arm/Robotic Actuator EB-15 - Assembly Drawing Sheet 1-3.jpg',
    '/uploads/robotics/eb15-robotic-arm/Robotic Actuator EB-15 - Assembly Drawing Sheet 2-3.jpg',
    '/uploads/robotics/eb15-robotic-arm/Robotic Collaborative Robot Arm EB-15.png',
    '/uploads/robotics/eb15-robotic-arm/Robotic_Arm_Assembly_5DOF.jpg',
  ];
}
if (entry.slug === 'arduino-control-box') {
  gallery = [
    '/uploads/robotics/arduino-control-box/Box.png',
    '/uploads/robotics/arduino-control-box/Box_1.png',
    '/uploads/robotics/arduino-control-box/1000007855.jpg',
    '/uploads/robotics/arduino-control-box/1000007856.jpg',
    '/uploads/robotics/arduino-control-box/1000007857.jpg',
  ];
}
---
<BaseLayout title={entry.data.title} description={entry.data.summary ?? 'Project detail'} wrap={false}>
  <div class="main-window-layout">
    <div class="flex-1">
      <article class="prose prose-neutral dark:prose-invert max-w-none">
        <div class="hero-blade">
          <h1 class="hero-title">{entry.data.title}</h1>
          {entry.data.summary && <p class="hero-sub">{entry.data.summary}</p>}
        </div>
        {(entry.data as any).image && <img src={(entry.data as any).image} alt={entry.data.title} class="rounded mb-6 mt-4" />}
        <div class="block lg:hidden"><Content /></div>
        {entry.slug === 'actuator-38-4-1' && (
          <section class="not-prose mt-4 mb-6">
            <h2 class="text-xl font-semibold mb-2">Download</h2>
            <a class="steam-btn" href="/api/downloads/actuator/ActuatorNema17.step" data-href="/api/downloads/actuator/ActuatorNema17.step" download>
              <span class="steam-btn__plate">
                <span class="screw tl" aria-hidden="true"></span>
                <span class="screw tr" aria-hidden="true"></span>
                <span class="screw bl" aria-hidden="true"></span>
                <span class="screw br" aria-hidden="true"></span>
                <span class="steam-btn__label" data-text="STEP: ActuatorNema17">STEP: ActuatorNema17</span>
              </span>
            </a>
          </section>
        )}
        {entry.slug === 'eb15-robotic-arm' && (
          <section class="not-prose mt-4 mb-6">
            <h2 class="text-xl font-semibold mb-2">Download</h2>
            <a class="steam-btn" href="/api/downloads/eb15/EB15_Arm_STEPs.zip" data-href="/api/downloads/eb15/EB15_Arm_STEPs.zip" download>
              <span class="steam-btn__plate">
                <span class="screw tl" aria-hidden="true"></span>
                <span class="screw tr" aria-hidden="true"></span>
                <span class="screw bl" aria-hidden="true"></span>
                <span class="screw br" aria-hidden="true"></span>
                <span class="steam-btn__label" data-text="Arduino Mega: Full Control (.ino)">Arduino Mega: Full Control (.ino)</span>
              </span>
            </a>
            <a class="steam-btn" href="/api/downloads/eb15/Due_full_control.ino" data-href="/api/downloads/eb15/Due_full_control.ino" download>
              <span class="steam-btn__plate">
                <span class="screw tl" aria-hidden="true"></span>
                <span class="screw tr" aria-hidden="true"></span>
                <span class="screw bl" aria-hidden="true"></span>
                <span class="screw br" aria-hidden="true"></span>
                <span class="steam-btn__label" data-text="Arduino Due: Full Control (.ino)">Arduino Due: Full Control (.ino)</span>
              </span>
            </a>
          </section>
        )}
        {entry.slug === 'arduino-control-box' && (
          <section class="not-prose mt-4 mb-6">
            <h2 class="text-xl font-semibold mb-2">Download</h2>
            <a class="steam-btn" href="/api/downloads/control-box/Control_Box_STEPs.zip" data-href="/api/downloads/control-box/Control_Box_STEPs.zip" download>
              <span class="steam-btn__plate">
                <span class="screw tl" aria-hidden="true"></span>
                <span class="screw tr" aria-hidden="true"></span>
                <span class="screw bl" aria-hidden="true"></span>
                <span class="screw br" aria-hidden="true"></span>
                <span class="steam-btn__label" data-text="STEP bundle: Control Box (1.4, 2.4, 3.4, 4.4)">STEP bundle: Control Box (1.4, 2.4, 3.4, 4.4)</span>
              </span>
            </a>
          </section>
        )}
        {gallery.length > 0 && (
          <section class="not-prose mt-8 mb-8">
            <h2 class="text-xl font-semibold mb-4">Gallery</h2>
            <ul class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-6">
              {gallery.map((src, idx) => (
                <li class="overflow-hidden rounded-lg border border-neutral-300 bg-white/90 shadow-sm hover:shadow-lg transition-all">
                  <button type="button" class="w-full aspect-[4/3] group" data-lb-src={src} aria-label={`Open image ${idx+1}`} style="background: #f8fafc;">
                    <img src={src} alt={`${entry.data.title} image ${idx+1}`} class="w-full h-40 object-cover object-center group-hover:opacity-90 transition duration-200" loading="lazy" />
                  </button>
                </li>
              ))}
            </ul>
            <div id="lightbox" class="fixed inset-0 z-[9999] hidden items-center justify-center bg-black/70 p-4" role="dialog" aria-modal="true" aria-label="Image viewer">
              <div class="max-w-5xl max-h-[85vh] relative">
                <button id="lightbox-close" class="absolute -top-3 -right-3 bg-white text-black rounded-full w-8 h-8 shadow" aria-label="Close">âœ•</button>
                <img id="lightbox-img" src="" alt="" class="w-auto h-auto max-w-full max-h-[85vh] rounded shadow-lg" />
              </div>
            </div>
            <script src="/js/lightbox.js"></script>
          </section>
        )}
      </article>
    </div>
    <aside class="hidden lg:block" style="align-self: flex-start; margin-top: 0;">
      <div class="details-panel" style="margin-top: 0;">
        <h2 class="details-title">Project Details</h2>
        <div id="details-content"><Content /></div>
      </div>
    </aside>
  </div>
  <script is:inline>
    (function(){
      // Hide any data-href download anchors if the user is not authenticated
      (async function(){
        try {
          const res = await fetch('/api/auth/me', { credentials: 'same-origin' });
          const j = await res.json();
          if (!j.authenticated) {
                document.querySelectorAll('a[data-href]').forEach(a => {
                  const section = a.closest('section');
                  if (section) section.style.display = 'none';
                  else a.style.display = 'none';
                });
              }
        } catch (e) { /* ignore */ }
      })();
      async function handleProtectedClick(e){
        const el = e.currentTarget;
        const href = el.getAttribute('data-href');
        if (!href) return;
        // allow normal navigation for login links
        if (href.includes('/login')) return;
        e.preventDefault();
        try {
          const res = await fetch(href, { credentials: 'same-origin' });
          if (res.status === 401) {
            const returnTo = encodeURIComponent(window.location.pathname + window.location.search);
            window.location.href = `/login?redirect=${returnTo}`;
            return;
          }
          if (!res.ok) { alert('Download failed'); return; }
          const blob = await res.blob();
          const url = URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          const cd = res.headers.get('Content-Disposition') || '';
          const m = /filename="?([^";]+)"?/.exec(cd);
          a.download = m ? m[1] : href.split('/').pop() || 'download';
          document.body.appendChild(a);
          a.click();
          a.remove();
          URL.revokeObjectURL(url);
        } catch (err) { console.error(err); alert('Network error'); }
      }
      document.querySelectorAll('a[data-href]').forEach(a => a.addEventListener('click', handleProtectedClick));
    })();
  </script>
